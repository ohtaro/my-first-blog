substitutions:
  _NGINX_CACHE_IMAGE: 'asia.gcr.io/$PROJECT_ID/nginx:$BRANCH_NAME'
  _NGINX_IMAGE: 'asia.gcr.io/$PROJECT_ID/nginx:$BUILD_ID'
  _APP_CACHE_IMAGE: 'asia.gcr.io/$PROJECT_ID/app:$BRANCH_NAME'
  _APP_IMAGE: 'asia.gcr.io/$PROJECT_ID/app:$BUILD_ID'
  _REGION: 'asia-northeast1'
  _ZONE: 'asia-northeast1-a'
  _CLUSTER: 'development'

# build timeout
timeout: 600s

# build tag
tags:
- my-first-blog
- ohtaro

# build image
images:
- 'asia.gcr.io/$PROJECT_ID/nginx:$BRANCH_NAME'
- 'asia.gcr.io/$PROJECT_ID/app:$BRANCH_NAME'
- 'asia.gcr.io/$PROJECT_ID/nginx:$BUILD_ID'
- 'asia.gcr.io/$PROJECT_ID/app:$BUILD_ID'


# build machine type
#options:
# machineType: 'N1_HIGHCPU_8'


steps:

# -----------------------------------------------
# Docker build & push
# -----------------------------------------------
# pull nginx cache
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker pull asia.gcr.io/$PROJECT_ID/nginx:$BRANCH_NAME || exit 0
  id: pull nginx cache

# pull app cache
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker pull asia.gcr.io/$PROJECT_ID/app:$BRANCH_NAME || exit 0
  - id: pull app cache

# build nginx docker image from cache
- name: 'gcr.io/cloud-builders/docker'
  args: [
            'build',
            '-t',
            'asia.gcr.io/$PROJECT_ID/nginx:$BUILD_ID',
            '--cache-from',
            'asia.gcr.io/$PROJECT_ID/nginx:$BRANCH_NAME',
            './docker/docker-nginx'
        ]
  id: docker build nginx
  waitFor:
  - pull nginx cache

# push nginx docker image to gcr
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'asia.gcr.io/$PROJECT_ID/nginx:$BUILD_ID' ]
  id: docker push nginx
  waitFor:
  - docker build nginx

# build appx docker image from cache
- name: 'gcr.io/cloud-builders/docker'
  args: [
            'build',
            '-t',
            'asia.gcr.io/$PROJECT_ID/app:$BUILD_ID',
            '--cache-from', 'asia.gcr.io/$PROJECT_ID/app:$BRANCH_NAME',
            './docker/docker-django'
        ]
  id: docker build app
  waitFor:
  - pull app cache

# push app docker image to gcr
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'asia.gcr.io/$PROJECT_ID/app:$BUILD_ID' ]
  id: docker push app
  waitFor:
  - docker build app

# Create branch name tag for cache
- name: 'gcr.io/cloud-builders/docker'
  args: [
            'tag',
            'asia.gcr.io/$PROJECT_ID/nginx:$BUILD_ID',
            'asia.gcr.io/$PROJECT_ID/nginx:$BRANCH_NAME'
        ]
  id: branch tag nginx

- name: 'gcr.io/cloud-builders/docker'
  args: [
            'tag',
            'asia.gcr.io/$PROJECT_ID/app:$BUILD_ID',
            'asia.gcr.io/$PROJECT_ID/app:$BRANCH_NAME'
        ]
  id: branch tag app

# push docker image to gcr for cache
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'asia.gcr.io/$PROJECT_ID/nginx:$BRANCH_NAME' ]
  waitFor:
  - branch tag nginx

# push docker image to gcr for cache
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', 'asia.gcr.io/$PROJECT_ID/app:$BRANCH_NAME' ]
  waitFor:
  - branch tag app

# -----------------------------------------------
# Deploy pods on GKE
# -----------------------------------------------
# gcloud authenthication
- name: 'gcr.io/cloud-builders/gcloud'
  args: [
            'container',
            'clusters',
            'get-credentials',
            '${_CLUSTER}',
            '--zone', 'asia-northeast1-a',
            '--project', '$PROJECT_ID'
        ]
  id: get-credentials
  waitFor:
  - docker push nginx
  - docker push app

# Decode mysql secret for base
- name: gcr.io/cloud-builders/gcloud
  id: decode mysql secret for base
  args:
  - kms
  - decrypt
  - --ciphertext-file=mysql-db-pass.env.enc
  - --plaintext-file=mysql-db-pass.env
  - --location=global
  - --keyring=my-first-blog
  - --key=blog
  dir: 'k8s/base'
  waitFor:
  - get-credentials

# Decode mysql secret for prod
- name: gcr.io/cloud-builders/gcloud
  id: decode mysql secret for prod
  args:
  - kms
  - decrypt
  - --ciphertext-file=mysql-db-pass.env.enc
  - --plaintext-file=mysql-db-pass.env
  - --location=global
  - --keyring=my-first-blog
  - --key=blog
  dir: 'k8s/overlays/production'
  waitFor:
  - get-credentials

# Set image tag
- name: 'gcr.io/$PROJECT_ID/kustomize'
  args:
  - 'edit'
  - 'set'
  - 'image'
  - 'nginx=asia.gcr.io/$PROJECT_ID/nginx:$BUILD_ID'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=asia-northeast1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER}'
  - 'GCLOUD_PROJECT=$PROJECT_ID'
  dir: 'k8s/overlays/production'
  id: set nginx image tag
  waitFor:
  - decode mysql secret for base
  - decode mysql secret for prod

# Set image tag
- id: deploy
  name: 'gcr.io/$PROJECT_ID/kustomize'
  args:
  - 'edit'
  - 'set'
  - 'image'
  - 'app=asia.gcr.io/$PROJECT_ID/app:$BUILD_ID'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=asia-northeast1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER}'
  - 'GCLOUD_PROJECT=$PROJECT_ID'
  dir: 'k8s/overlays/production'
  id: set app image tag
  waitFor:
  - decode mysql secret for base
  - decode mysql secret for prod

# Deploy pods on GKE
- name: 'gcr.io/$PROJECT_ID/kustomize'
  args:
  - 'build'
  - 'k8s/overlays/production'
  env:
  - 'APPLY=true'
  - 'CLOUDSDK_COMPUTE_ZONE=asia-northeast1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER}'
  - 'GCLOUD_PROJECT=$PROJECT_ID'
  id: deploy pods
  waitFor:
  - set nginx image tag
  - set app image tag
