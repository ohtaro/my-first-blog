apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: blog
    tier: backend
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: blog
      tier: backend
  template:
    metadata:
      labels:
        app: blog
        tier: backend
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: mysql
        image: mysql:5.7
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c']
        args:
        - |
          if [ -e /var/lib/mysql/lost+found ]; then
             rm -rfv /var/lib/mysql/lost+found
          fi
          docker-entrypoint.sh mysqld
        ports:
        - containerPort: 80
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: django-db-config
              key: DB_NAME
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: django-db-config
              key: DB_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-db-pass
              key: DB_PASS
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-db-pass
              key: DB_PASS
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
          limits:
            cpu: 300m
            memory: 500Mi
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard
