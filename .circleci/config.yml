version: 2
jobs:
  build:
    working_directory: /app
    environment:
      PROJECT_NAME: soe-trial-oota
      CLUSTER_NAME: ohta-k8s-development
      CLOUDSDK_COMPUTE_ZONE: asia-northeast1-a
      DEBIAN_FRONTEND: noninteractive
      GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/account-auth.json
      APP_IMAGE_NAME: blog
    docker:
      - image: google/cloud-sdk:241.0.0-slim
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}-{{ .Revision }}
            - v1-{{ .Branch }}-
            - v1-
      - run:
          name: Install dependencies
          command: |
            apt-get install -y gettext
            curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
            apt-get install -y kubectl
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.05.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Check docker version
          command: |
            docker version
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=asia.gcr.io/${PROJECT_NAME}/${APP_IMAGE_NAME}:latest -t asia.gcr.io/${PROJECT_NAME}/${APP_IMAGE_NAME}:$CIRCLE_SHA1 ./docker-django
            docker tag asia.gcr.io/${PROJECT_NAME}/${APP_IMAGE_NAME}:$CIRCLE_SHA1 asia.gcr.io/${PROJECT_NAME}/${APP_IMAGE_NAME}:latest
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar asia.gcr.io/${PROJECT_NAME}/${APP_IMAGE_NAME}:latest
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      - run:
          name: docker-compose build
          command: |
            docker-compose build
      - deploy:
          name: Deploy application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo $ACCT_AUTH | base64 -d > ${HOME}/account-auth.json
              gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
              gcloud config set project $PROJECT_NAME
              gcloud --quiet config set container/cluster $CLUSTER_NAME
              gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
              gcloud --quiet container clusters get-credentials $CLUSTER_NAME
              gcloud config set container/use_client_certificate True
              gcloud auth configure-docker
              docker-compose push
              ./deploy.sh
            fi
